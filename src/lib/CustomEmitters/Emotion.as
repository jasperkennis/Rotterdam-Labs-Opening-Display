package lib.CustomEmitters{	import flash.geom.Point;	import org.flintparticles.common.counters.*;	import org.flintparticles.common.displayObjects.RadialDot;	import org.flintparticles.common.initializers.*;	import org.flintparticles.twoD.actions.*;	import org.flintparticles.twoD.emitters.Emitter2D;	import org.flintparticles.twoD.initializers.*;	import org.flintparticles.twoD.zones.*;	/**	 * Creates one single particle with a predefined	 * behaivoir and a varialbe color, shape and size	 * when start is called.	 *	 * @author Frank Bos and Jasper Kennis	 */	public class Emotion extends Emitter2D	{		private var _imgClass:ImageClass;		private var _zone:RectangleZone;		private var _position:Position;		private var _zone2:PointZone;		private var _velocity:Velocity;		private var _dzone:RectangleZone;		private var _deathZone:DeathZone;		private var _scaleImage:ScaleImageInit;		private var _emotions:Array;		public function Emotion()		{						// Populate the emotion array.			// Sad, Angry, Supprised, Happy			_emotions = new Array(								  new uint(0x57a3a0),								  new uint(0xe70414),								  new uint(0xefd42e),								  new uint(0xe82e9d)								  );			// Add a counter to the emitter, which tells the emitter			// how many particles should be emitted every second. A			// steady counter continues to create particles.			counter = new Blast(1);			// Create a shape to render and tell the emitter to use			// that shape.						// Create a zone where the particles are created.			_zone = new RectangleZone(0,0,500,400);			_position = new Position(_zone);			addInitializer( _position );			// Create a direction in which particles will move.			addInitializer( new Velocity( new DiscZone( new Point( 0, 0 ), 100, 100 ) ) );			// Add the move and drift action to the emitter.			addAction( new Move() );			addAction( new RandomDrift( 15, 15 ) );			addAction( new Collide( 1 ) );      		addAction( new BoundingBox( 0, 0, 500, 400, 1 ) );		}		/**		 * A custom start method that applies desireable changes		 * to the display object before creating it.		 */		public function extendedStart(age:int, sex:int, emotion:int):void		{			// Remove old _imgClass and add the new one			removeInitializer( _imgClass );			_imgClass = new ImageClass(RadialDot,[10, _emotions[emotion]]);			addInitializer( _imgClass );						super.start();		}	}}